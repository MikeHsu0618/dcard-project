version: "3.8"

services:
  postgres:
    image: postgres:14.1-alpine
    container_name: "database"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - fullstack
    volumes:
      - database_postgres:/var/lib/postgresql/data

  golang-prod:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: "golang-prod"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - fullstack

  golang:
    build: .
    container_name: "golang"
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    command: gin -p 8080 /app/main.go
    depends_on:
      - postgres
    networks:
      - fullstack

  redis:
    image: redis:6.0-buster
    ports:
      - "6379:6379"
    container_name: 'redis'
    networks:
      - fullstack
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./storage/data:/data
    command:
      /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"

  migrate:
    image: migrate/migrate
    container_name: "migrate"
    networks:
      - fullstack
    volumes:
      - ./database/migrations:/migrations
    depends_on:
      - postgres
    command: [ "-path", "/migrations", "-database",  "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable", "down", "1"]

networks:
  fullstack:
    driver: bridge

volumes:
  database_postgres: